/* encoders This program shows how to read the encoders on the Zumo 32U4.
The encoders can tell you how far, and in which direction each
motor has turned.

You can press button A on the Zumo to drive both motors forward
at full speed.  You can press button C to drive both motors
in reverse at full speed.

Encoder counts are printed to the LCD and to the serial monitor.

On the LCD, the top line shows the counts from the left encoder,
and the bottom line shows the counts from the right encoder.
Encoder errors should not happen, but if one does happen then the
buzzer will beep and an exclamation mark will appear temporarily
on the LCD.

In the serial monitor, the first and second numbers represent 
counts from the left and right encoders, respectively.  The third
and fourth numbers represent errors from the left and right
encoders, respectively. */

#include <Wire.h>
#include <Zumo32U4.h>

Zumo32U4Encoders encoders;
Zumo32U4LCD lcd;
Zumo32U4Buzzer buzzer;
Zumo32U4Motors motors;
Zumo32U4ButtonA buttonA;
Zumo32U4ButtonC buttonC;

const char encoderErrorLeft[] PROGMEM = "!<c2";
const char encoderErrorRight[] PROGMEM = "!<e2";

char report[80];

void setup()
{
  buttonA.waitForButton();
  delay(1000);  
}

void loop()
{
  static uint8_t lastDisplayTime;
  static uint8_t displayErrorLeftCountdown = 0;
  static uint8_t displayErrorRightCountdown = 0;
  static long sampletime;
  static int pwm;
  
  pwm = 400;
  if ((uint8_t)(millis() - lastDisplayTime) >= 5)
  {
    lastDisplayTime = millis();
    sampletime = millis();

    int16_t countsLeft = encoders.getCountsLeft();
    int16_t countsRight = encoders.getCountsRight();

    bool errorLeft = encoders.checkErrorLeft();
    bool errorRight = encoders.checkErrorRight();

    if(encoders.checkErrorLeft())
    {
      // An error occurred on the left encoder channel.
      // Display it on the LCD for the next 10 iterations and
      // also beep.
      //displayErrorLeftCountdown = 10;
      buzzer.playFromProgramSpace(encoderErrorLeft);
    }

    if(encoders.checkErrorRight())
    {
      // An error occurred on the left encoder channel.
      // Display it on the LCD for the next 10 iterations and
      // also beep.
      //displayErrorRightCountdown = 10;
      buzzer.playFromProgramSpace(encoderErrorRight);
    }
    
    if (countsLeft < 10500)
    {
//      motors.setSpeeds(-pwm, 0.985*pwm);
//      motors.setSpeeds(400, 394);
      motors.setSpeeds(100, 100);

    }
    else{
          motors.setSpeeds(0,0);
    }

    // Send the information to the serial monitor also.
    snprintf_P(report, sizeof(report),
        PSTR("%6d %6d %1d %1d %lu %1d"),
        countsLeft, countsRight, errorLeft, errorRight, sampletime, pwm);
    Serial.println(report);
  }


}

